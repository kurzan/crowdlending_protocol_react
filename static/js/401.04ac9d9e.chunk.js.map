{"version":3,"file":"static/js/401.04ac9d9e.chunk.js","mappings":"2hBA0BaA,ECfPC,ECRFC,EA6FSC,EC4ETC,EAWAC,EAEEC,EA0BAC,ECjNKC,ECFEC,EAAY,CAAlB,EACMC,EAAY,GACZC,EACZ,oELMe,SAAAC,EAAOZ,EAAKC,GAE3B,IAAK,IAAIC,KAAKD,EAAOD,EAAIE,GAAKD,EAAMC,GACpC,OAA6BF,CAC7B,CAQM,SAASa,EAAWb,GAC1B,IAAIC,EAAaD,EAAKc,WAClBb,GAAYA,EAAWc,YAAYf,EACvC,CEXM,SAASgB,EAAcf,EAAMC,EAAOC,GAC1C,IACCC,EACAC,EACAC,EAHGC,EAAkB,CAAC,EAIvB,IAAKD,KAAKJ,EACA,OAALI,EAAYF,EAAMF,EAAMI,GACd,OAALA,EAAYD,EAAMH,EAAMI,GAC5BC,EAAgBD,GAAKJ,EAAMI,GAUjC,GAPIW,UAAUC,OAAS,IACtBX,EAAgBY,SACfF,UAAUC,OAAS,EAAIlB,EAAMoB,KAAKH,UAAW,GAAKd,GAKjC,mBAARF,GAA2C,MAArBA,EAAKoB,aACrC,IAAKf,KAAKL,EAAKoB,kBAAA,IACVd,EAAgBD,KACnBC,EAAgBD,GAAKL,EAAKoB,aAAaf,IAK1C,OAAOgB,EAAYrB,EAAMM,EAAiBH,EAAKC,EAAK,KACpD,UAceiB,EAAYtB,EAAMG,EAAOC,EAAKC,EAAKC,GAGlD,IAAMC,EAAQ,CACbgB,KAAAvB,EACAwB,MAAArB,EACAsB,IAAArB,EACAsB,IAAArB,EACAsB,IAAW,KACXC,GAAS,KACTC,IAAQ,EACRC,IAAM,KAKNC,SAAA,EACAC,IAAY,KACZC,IAAY,KACZC,iBAAA,EACAC,IAAuB,MAAZ7B,IAAqBJ,EAAUI,GAM3C,OAFgB,MAAZA,GAAqC,MAAjBL,EAAQmC,OAAenC,EAAQmC,MAAM7B,GAEtDA,CACP,CAEM,SAAS8B,IACf,MAAO,CAAEC,QAAS,KAClB,CAEM,SAASC,EAASvC,GACxB,OAAOA,EAAMmB,QACb,CC7Ee,SAAAqB,EAAUxC,EAAOC,GAChCwC,KAAKjB,MAAQxB,EACbyC,KAAKC,QAAUzC,CACf,CA0Ee,SAAA0C,EAAc3C,EAAOC,GACpC,GAAkB,MAAdA,EAEH,OAAOD,EAAA4B,GACJe,EAAc3C,EAAe4B,GAAA5B,EAAA4B,GAAwBD,IAAAiB,QAAQ5C,GAAS,GACtE,KAIJ,IADA,IAAIE,EACGD,EAAaD,EAAA2B,IAAgBT,OAAQjB,IAG3C,GAAe,OAFfC,EAAUF,EAAA2B,IAAgB1B,KAEa,MAAhBC,EAAO4B,IAI7B,OAAO5B,EAAP4B,IASF,MAA4B,mBAAd9B,EAAMuB,KAAqBoB,EAAc3C,GAAS,IAChE,CAsCD,SAAS6C,EAAwB7C,GAAjC,IAGWC,EACJC,EAHN,GAA+B,OAA1BF,EAAQA,EAAT4B,KAAuD,MAApB5B,EAAAgC,IAA0B,CAEhE,IADAhC,EAAK8B,IAAQ9B,EAAKgC,IAAYc,KAAO,KAC5B7C,EAAI,EAAGA,EAAID,EAAK2B,IAAWT,OAAQjB,IAE3C,GAAa,OADTC,EAAQF,EAAK2B,IAAW1B,KACO,MAAdC,EAAA4B,IAAoB,CACxC9B,EAAA8B,IAAa9B,EAAAgC,IAAiBc,KAAO5C,EAArC4B,IACA,KACA,CAGF,OAAOe,EAAwB7C,EAC/B,CACD,CA4BM,SAAS+C,EAAc/C,KAE1BA,EACA+B,MAAA/B,EAAA+B,KAAA,IACD3B,EAAc4C,KAAKhD,KAClBiD,EAAAC,OACF7C,IAAiBJ,EAAQkD,sBAEzB9C,EAAeJ,EAAQkD,oBACN7C,GAAO2C,EAEzB,CASD,SAASA,IAAT,IACKjD,EAMEC,EApGkBC,EAMnBC,EACEE,EANHC,EACHE,EACAC,EA+FD,IAHAL,EAAcgD,KAAK7C,GAGXP,EAAII,EAAciD,SACrBrD,EAAU+B,MACT9B,EAAoBG,EAAcc,OA9FnCf,OAAA,EACEE,OAAA,EALNG,GADGF,GADoBJ,EAqGNF,GApGlBmC,KAAAL,KAECrB,EAAYP,EAFboD,OAKKnD,EAAc,IACZE,EAAWO,EAAO,CAAC,EAAGN,IAC5B6B,IAAqB7B,EAAA6B,IAAkB,EAEvCoB,EACC9C,EACAH,EACAD,EACAH,EAJGsD,SAAA,IAKH/C,EAAUgD,gBACU,MAApBnD,EAAK2B,IAAsB,CAACzB,GAAU,KACtCL,EACU,MAAVK,EAAiBmC,EAAcrC,GAASE,EACxCF,EAAA2B,KAEDyB,EAAWvD,EAAaG,GAEpBA,EAAAwB,KAActB,GACjBqC,EAAwBvC,IA8EpBF,EAAcc,OAASjB,GAI1BG,EAAcgD,KAAK7C,IAItB0C,EAAAC,IAAyB,CACzB,CG/MM,SAASS,EACf3D,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAG,GAVM,IAYFC,EAAGC,EAAGG,EAAUqB,EAAYG,EAAQK,EAAeE,EAInDE,EAAe9C,GAAkBA,EAAJwB,KAAiCjB,EAE9DiD,EAAoBV,EAAY/B,OAGpC,IADAhB,EAAcyB,IAAa,GACtBf,EAAI,EAAGA,EAAIX,EAAaiB,OAAQN,IAoDpC,GAAkB,OA5CjByB,EAAanC,EAAAyB,IAAyBf,GAJxB,OAHfyB,EAAapC,EAAaW,KAIJ,kBAAdyB,GACc,mBAAdA,EAEoC,KAMtB,iBAAdA,GACc,iBAAdA,GAEc,iBAAdA,EAEoCf,EAC1C,KACAe,EACA,KACA,KACAA,GAESuB,MAAMC,QAAQxB,GACmBf,EAC1CiB,EACA,CAAEpB,SAAUkB,GACZ,KACA,KACA,MAESA,EAAAR,IAAoB,EAKaP,EAC1Ce,EAAWd,KACXc,EAAWb,MACXa,EAAWZ,IACXY,EAAWX,IAAMW,EAAWX,IAAM,KAClCW,EALqDF,KAQXE,GAK5C,CAaA,GATAA,EAAUT,GAAW1B,EACrBmC,EAAAR,IAAoB3B,EAAc2B,IAAU,EAS9B,QAHdb,EAAWiC,EAAYrC,KAIrBI,GACAqB,EAAWZ,KAAOT,EAASS,KAC3BY,EAAWd,OAASP,EAASO,KAE9B0B,EAAYrC,QAAA,OAIZ,IAAKC,EAAI,EAAGA,EAAI8C,EAAmB9C,IAAK,CAIvC,IAHAG,EAAWiC,EAAYpC,KAKtBwB,EAAWZ,KAAOT,EAASS,KAC3BY,EAAWd,OAASP,EAASO,KAC5B,CACD0B,EAAYpC,QAAA,EACZ,KACA,CACDG,EAAW,IACX,CAMFuC,EACCvD,EACAqC,EALDrB,EAAWA,GAAYP,EAOtBL,EACAC,EACAC,EACAC,EACAC,EACAG,GAGD6B,EAASH,EAAHP,KAEDjB,EAAIwB,EAAWX,MAAQV,EAASU,KAAOb,IACtCkC,IAAMA,EAAO,IACd/B,EAASU,KAAKqB,EAAKC,KAAKhC,EAASU,IAAK,KAAMW,GAChDU,EAAKC,KAAKnC,EAAGwB,EAAUL,KAAeQ,EAAQH,IAGjC,MAAVG,GACkB,MAAjBK,IACHA,EAAgBL,GAIU,mBAAnBH,EAAWd,MAClBc,EAAUV,MAAeX,EAF1BW,IAICU,EAAAN,IAAsBvB,EAASsD,EAC9BzB,EACA7B,EACAR,GAGDQ,EAASuD,EACR/D,EACAqC,EACArB,EACAiC,EACAT,EACAhC,GAIgC,mBAAvBN,EAAeqB,OAQzBrB,EAAc6B,IAAYvB,IAG3BA,GACAQ,EAAAc,KAAiBtB,GACjBA,EAAOM,YAAcd,IAIrBQ,EAASmC,EAAc3B,GAtGvB,CA6GF,IAHAd,EAAc4B,IAAQe,EAGjBjC,EAAI+C,EAAmB/C,KACL,MAAlBqC,EAAYrC,KAEgB,mBAAvBV,EAAeqB,MACC,MAAvB0B,EAAYrC,GAAZkB,KACAmB,EAAYrC,GAAZkB,KAAuB5B,EAAvB6B,MAKA7B,EAAc6B,IAAYiC,EAAW7D,GAAgB8D,aAGtDC,EAAQjB,EAAYrC,GAAIqC,EAAYrC,KAKtC,GAAImC,EACH,IAAKnC,EAAI,EAAGA,EAAImC,EAAK7B,OAAQN,IAC5BuD,EAASpB,EAAKnC,GAAImC,IAAOnC,GAAImC,IAAOnC,GAGtC,CAED,SAASkD,EAAgB9D,EAAYC,EAAQC,GAI5C,IAJD,IAKMC,EAHDC,EAAIJ,EAAH2B,IACDtB,EAAM,EACHD,GAAKC,EAAMD,EAAEc,OAAQb,KACvBF,EAAQC,EAAEC,MAMbF,EAAAyB,GAAgB5B,EAGfC,EADwB,mBAAdE,EAAMoB,KACPuC,EAAgB3D,EAAOF,EAAQC,GAE/B6D,EAAW7D,EAAWC,EAAOA,EAAOC,EAAGD,EAA7B2B,IAAyC7B,IAK/D,OAAOA,CACP,CAQM,SAASmE,EAAapE,EAAUC,GAUtC,OATAA,EAAMA,GAAO,GACG,MAAZD,GAAuC,kBAAZA,IACpB4D,MAAMC,QAAQ7D,GACxBA,EAASqE,MAAK,SAAArE,GACboE,EAAapE,EAAOC,EACpB,IAEDA,EAAI+C,KAAKhD,IAEHC,CACP,CAED,SAAS8D,EACR/D,EACAC,EACAC,EACAC,EACAC,EACAC,GAND,IAQKC,EAuBGC,EAAiBC,EAtBxB,QAAI,IAAAP,EAAA8B,IAIHzB,EAAUL,EAAH8B,IAMP9B,EAAA8B,SAAA,OAEA,GAAY,MAAZ7B,GACAE,GAAUC,GACW,MAArBD,EAAOU,WAEPd,EAAO,GAAc,MAAVK,GAAkBA,EAAOS,aAAed,EAClDA,EAAUsE,YAAYlE,GACtBE,EAAU,SACJ,CAEN,IACKC,EAASF,EAAQG,EAAI,GACxBD,EAASA,EAAO0D,cAAgBzD,EAAIL,EAAYe,OACjDV,GAAK,EAEL,GAAID,GAAUH,EACb,MAAMJ,EAGRA,EAAUuE,aAAanE,EAAQC,GAC/BC,EAAUD,CACV,CAYF,YAAO,IANHC,EACMA,EAEAF,EAAO6D,WAIjB,CAKD,SAASD,EAAWhE,GAApB,IAMWC,EACJC,EAECC,EARP,GAAkB,MAAdH,EAAMuB,MAAsC,iBAAfvB,EAAMuB,KACtC,OAAOvB,EAAP8B,IAGD,GAAI9B,EAAJ2B,IACC,IAAS1B,EAAID,EAAA2B,IAAgBT,OAAS,EAAGjB,GAAK,EAAGA,IAEhD,IADIC,EAAQF,EAAK2B,IAAW1B,MAEvBE,EAAU6D,EAAW9D,IAExB,OAAOC,EAMX,OACA,KC/TD,SAASqE,EAASxE,EAAOC,EAAKC,GACd,MAAXD,EAAI,GACPD,EAAMyE,YAAYxE,EAAc,MAATC,EAAgB,GAAKA,GAE5CF,EAAMC,GADa,MAATC,EACG,GACa,iBAATA,GAAqBS,EAAmB+D,KAAKzE,GACjDC,EAEAA,EAAQ,IAEtB,CAUe,SAAAyE,EAAY3E,EAAKC,EAAMC,EAAOC,EAAUC,GAAxC,IACXC,EAEJL,EAAG,GAAa,UAATC,EACN,GAAoB,iBAATC,EACVF,EAAI4E,MAAMC,QAAU3E,MACd,CAKN,GAJuB,iBAAZC,IACVH,EAAI4E,MAAMC,QAAU1E,EAAW,IAG5BA,EACH,IAAKF,KAAQE,EACND,GAASD,KAAQC,GACtBsE,EAASxE,EAAI4E,MAAO3E,EAAM,IAK7B,GAAIC,EACH,IAAKD,KAAQC,EACPC,GAAYD,EAAMD,KAAUE,EAASF,IACzCuE,EAASxE,EAAI4E,MAAO3E,EAAMC,EAAMD,GAInC,MAGG,GAAgB,MAAZA,EAAK,IAA0B,MAAZA,EAAK,GAChCI,EAAaJ,KAAUA,EAAOA,EAAK6E,QAAQ,WAAY,KAGxB7E,EAA3BA,EAAK8E,gBAAiB/E,EAAYC,EAAK8E,cAAcC,MAAM,GACnD/E,EAAK+E,MAAM,GAElBhF,EAALC,IAAqBD,EAAGC,EAAc,CAAjB,GACrBD,EAAAC,EAAeA,EAAOI,GAAcH,EAEhCA,EACEC,GAEJH,EAAIiF,iBAAiBhF,EADLI,EAAa6E,EAAoBC,EACb9E,GAIrCL,EAAIoF,oBAAoBnF,EADRI,EAAa6E,EAAoBC,EACV9E,QAElC,GAAa,4BAATJ,EAAoC,CAC9C,GAAIG,EAIHH,EAAOA,EAAK6E,QAAQ,cAAe,KAAKA,QAAQ,SAAU,UACpD,GACG,UAAT7E,GACS,WAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GAGS,aAATA,GACS,aAATA,GACAA,KAAQD,EAER,IACCA,EAAIC,GAAiB,MAATC,EAAgB,GAAKA,EAEjC,MAAMF,CAEP,CADE,MAAOA,GACT,CASoB,mBAAVE,IAES,MAATA,IAAA,IAAkBA,GAA+B,MAAZD,EAAK,GAGpDD,EAAIqF,gBAAgBpF,GAFpBD,EAAIsF,aAAarF,EAAMC,GAIxB,CACD,CAOD,SAASiF,EAAWnF,GACnB,OAAOyC,KAAPxC,EAAuBD,EAAEuB,MAAA,GAActB,EAAQsF,MAAQtF,EAAQsF,MAAMvF,GAAKA,EAC1E,CAED,SAASkF,EAAkBlF,GAC1B,OAAOyC,KAAAxC,EAAgBD,EAAEuB,MAAA,GAAatB,EAAQsF,MAAQtF,EAAQsF,MAAMvF,GAAKA,EACzE,CCpIe,SAAAuD,EACfvD,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GATe,IAWXC,EAoBEC,EAAGE,EAAOG,EAAUM,EAAUe,EAAUM,EACxCE,EAKAE,EACAE,EAsGOa,EA2BPM,EACHL,EASSC,EA6BNwB,EAlMLhB,EAAUtE,EAASqB,KAIpB,QAAI,IAAArB,EAASgC,YAA2B,OAAO,KAGpB,MAAvB/B,EAAA8B,MACHxB,EAAcN,EAAd8B,IACAzB,EAASN,EAAQ4B,IAAQ3B,EAAzB2B,IAEA5B,EAAQ+B,IAAc,KACtB3B,EAAoB,CAACE,KAGjBE,EAAMT,EAAH4B,MAAmBnB,EAAIR,GAE/B,IACCF,EAAO,GAAsB,mBAAXwE,EAAuB,CA6DxC,GA3DI3B,EAAW3C,EAASsB,MAKpBuB,GADJrC,EAAM8D,EAAQiB,cACQrF,EAAcM,EAADsB,KAC/BiB,EAAmBvC,EACpBqC,EACCA,EAASvB,MAAMkE,MACfhF,EAFOkB,GAGRxB,EAGCD,EAAJ6B,IAECW,GADAhC,EAAIT,EAAA8B,IAAsB7B,EAAtB6B,KACuBJ,GAAyBjB,EAAzBgF,KAGvB,cAAenB,GAAWA,EAAQoB,UAAUC,OAE/C3F,EAAA8B,IAAsBrB,EAAI,IAAI6D,EAAQ3B,EAAUI,IAGhD/C,EAAQ8B,IAAcrB,EAAI,IAAI6B,EAAUK,EAAUI,GAClDtC,EAAEuB,YAAcsC,EAChB7D,EAAEkF,OAASC,GAER/C,GAAUA,EAASgD,IAAIpF,GAE3BA,EAAEa,MAAQqB,EACLlC,EAAEqF,QAAOrF,EAAEqF,MAAQ,CAAV,GACdrF,EAAE+B,QAAUO,EACZtC,EAAC6C,IAAkBpD,EACnBS,EAAQF,EAACoB,KAAA,EACTpB,EAAAsB,IAAqB,GACrBtB,EAACsF,IAAmB,IAID,MAAhBtF,EAACuF,MACJvF,EAACuF,IAAcvF,EAAEqF,OAGsB,MAApCxB,EAAQ2B,2BACPxF,EAACuF,KAAevF,EAAEqF,QACrBrF,EAACuF,IAActF,EAAO,CAAD,EAAKD,EAC1BuF,MAEDtF,EACCD,EACAuF,IAAA1B,EAAQ2B,yBAAyBtD,EAAUlC,EAFtCuF,OAMPlF,EAAWL,EAAEa,MACbF,EAAWX,EAAEqF,MACbrF,EAAAwB,IAAWjC,EAGPW,EAEkC,MAApC2D,EAAQ2B,0BACgB,MAAxBxF,EAAEyF,oBAEFzF,EAAEyF,qBAGwB,MAAvBzF,EAAE0F,mBACL1F,EAACsB,IAAkBe,KAAKrC,EAAE0F,uBAErB,CASN,GAPqC,MAApC7B,EAAQ2B,0BACRtD,IAAa7B,GACkB,MAA/BL,EAAE2F,2BAEF3F,EAAE2F,0BAA0BzD,EAAUI,IAIpCtC,EACDmB,KAA2B,MAA3BnB,EAAE4F,wBAAA,IACF5F,EAAE4F,sBACD1D,EACAlC,EACAuF,IAAAjD,IAEF/C,EAAAiC,MAAuBhC,EARxBgC,IASE,CAoBD,IAlBIjC,EAAQiC,MAAehC,EAA3BgC,MAKCxB,EAAEa,MAAQqB,EACVlC,EAAEqF,MAAQrF,EACVuF,IAAAvF,EAAAoB,KAAA,GAIDpB,EAACmB,KAAA,EACD5B,EAAQ4B,IAAQ3B,EAChB2B,IAAA5B,EAAAyB,IAAqBxB,EAArBwB,IACAzB,EAAQyB,IAAW6E,SAAQ,SAAAxG,GACtBA,IAAOA,EAAK4B,GAAW1B,EAC3B,IAEQ4D,EAAI,EAAGA,EAAInD,EAACsF,IAAiB/E,OAAQ4C,IAC7CnD,EAAAsB,IAAmBe,KAAKrC,EAACsF,IAAiBnC,IAE3CnD,EAAAsF,IAAoB,GAEhBtF,EAAAsB,IAAmBf,QACtBX,EAAYyC,KAAKrC,GAGlB,MAAMX,CACN,CAE4B,MAAzBW,EAAE8F,qBACL9F,EAAE8F,oBAAoB5D,EAAUlC,EAAcuF,IAAAjD,GAGnB,MAAxBtC,EAAE+F,oBACL/F,EAACsB,IAAkBe,MAAK,WACvBrC,EAAE+F,mBAAmB1F,EAAUM,EAAUe,EACzC,GAEF,CAQD,GANA1B,EAAE+B,QAAUO,EACZtC,EAAEa,MAAQqB,EACVlC,EAAC2C,IAActD,EAEXoE,EAAanE,EAAjBiD,IACCa,EAAQ,EACL,cAAeS,GAAWA,EAAQoB,UAAUC,OAAQ,CAQvD,IAPAlF,EAAEqF,MAAQrF,EACVuF,IAAAvF,EAAAoB,KAAA,EAEIqC,GAAYA,EAAWlE,GAE3BQ,EAAMC,EAAEkF,OAAOlF,EAAEa,MAAOb,EAAEqF,MAAOrF,EAAE+B,SAE1BsB,EAAI,EAAGA,EAAIrD,EAAAsF,IAAkB/E,OAAQ8C,IAC7CrD,EAACsB,IAAkBe,KAAKrC,EAAAsF,IAAkBjC,IAE3CrD,EAACsF,IAAmB,EACpB,MACA,GACCtF,EAAAoB,KAAA,EACIqC,GAAYA,EAAWlE,GAE3BQ,EAAMC,EAAEkF,OAAOlF,EAAEa,MAAOb,EAAEqF,MAAOrF,EAAE+B,SAGnC/B,EAAEqF,MAAQrF,EACVuF,UAAQvF,EAAAoB,OAAcgC,EAAQ,IAIhCpD,EAAEqF,MAAQrF,EAAVuF,IAEyB,MAArBvF,EAAEgG,kBACLvG,EAAgBQ,EAAOA,EAAO,CAAC,EAAGR,GAAgBO,EAAEgG,oBAGhD9F,GAAsC,MAA7BF,EAAEiG,0BACfvE,EAAW1B,EAAEiG,wBAAwB5F,EAAUM,IAK5CkE,EADI,MAAP9E,GAAeA,EAAIa,OAASgB,GAAuB,MAAX7B,EAAIe,IACLf,EAAIc,MAAML,SAAWT,EAE7DiD,EACC3D,EACA4D,MAAMC,QAAQ2B,GAAgBA,EAAe,CAACA,GAC9CtF,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGDE,EAAEmC,KAAO5C,EAGT4B,IAAA5B,EAAA+B,IAAsB,KAElBtB,EAAAsB,IAAmBf,QACtBX,EAAYyC,KAAKrC,GAGdgC,IACHhC,EAACgF,IAAiBhF,EAAAiB,GAAyB,MAG5CjB,EAACmB,KAAA,CACD,MACqB,MAArBxB,GACAJ,EAAAiC,MAAuBhC,EAFjBgC,KAINjC,EAAAyB,IAAqBxB,EAArBwB,IACAzB,EAAQ4B,IAAQ3B,EAChB2B,KACA5B,EAAQ4B,IAAQ+E,EACf1G,EACA2B,IAAA5B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAE,IAIGC,EAAMT,EAAQ6G,SAASpG,EAAIR,EAYhC,CAXC,MAAOF,GACRE,EAAAiC,IAAqB,MAEjB1B,GAAoC,MAArBH,KAClBJ,EAAA4B,IAAgBtB,EAChBN,EAAQ+B,MAAgBxB,EACxBH,EAAkBA,EAAkBsC,QAAQpC,IAAW,MAIxDP,EAAA6B,IAAoB9B,EAAGE,EAAUC,EACjC,CACD,CAOM,SAASuD,EAAW1D,EAAaE,GACnCD,EAAiB+B,KAAA/B,EAAA+B,IAAgB9B,EAAMF,GAE3CA,EAAYqE,MAAK,SAAAnE,GAChB,IAECF,EAAcE,EAAd+B,IACA/B,EAAC+B,IAAoB,GACrBjC,EAAYqE,MAAK,SAAArE,GAEhBA,EAAGoB,KAAKlB,EACR,GAGD,CAFC,MAAOF,GACRC,EAAA6B,IAAoB9B,EAAGE,EAAvBiC,IACA,CACD,GACD,CAgBD,SAAS0E,EACR5G,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GARD,IAoBSE,EAsDHC,EACAC,EAjEDI,EAAWb,EAASqB,MACpBF,EAAWpB,EAASsB,MACpBa,EAAWnC,EAASqB,KACpBgB,EAAI,EAKR,GAFiB,QAAbF,IAAoBhC,GAAA,GAEC,MAArBC,EACH,KAAOiC,EAAIjC,EAAkBY,OAAQqB,IAMpC,IALM7B,EAAQJ,EAAkBiC,KAO/B,iBAAkB7B,KAAY2B,IAC7BA,EAAW3B,EAAMqG,YAAc1E,EAA8B,IAAnB3B,EAAMsG,UAChD,CACD/G,EAAMS,EACNJ,EAAkBiC,GAAK,KACvB,KACA,CAIH,GAAW,MAAPtC,EAAa,CAChB,GAAiB,OAAboC,EAEH,OAAO4E,SAASC,eAAe5F,GAI/BrB,EADGI,EACG4G,SAASE,gBACd,6BAEA9E,GAGK4E,SAASG,cAEd/E,EACAf,EAAS+F,IAAM/F,GAKjBhB,EAAoB,KAEpBE,GAAA,CACA,CAED,GAAiB,OAAb6B,EAECrB,IAAaM,GAAcd,GAAeP,EAAIqH,OAAShG,IAC1DrB,EAAIqH,KAAOhG,OAEN,CAWN,GATAhB,EAAoBA,GAAqBN,EAAMoB,KAAKnB,EAAIsH,YAIpD5G,GAFJK,EAAWb,EAASqB,OAASf,GAEN+G,wBACnB5G,EAAUU,EAASkG,yBAIlBhH,EAAa,CAGjB,GAAyB,MAArBF,EAEH,IADAU,EAAW,CAAX,EACKuB,EAAI,EAAGA,EAAItC,EAAIwH,WAAWvG,OAAQqB,IACtCvB,EAASf,EAAIwH,WAAWlF,GAAGmF,MAAQzH,EAAIwH,WAAWlF,GAAGmD,OAInD9E,GAAWD,KAGZC,IACED,GAAWC,EAAO+G,QAAWhH,EAAlBgH,QACb/G,EAAA+G,SAAmB1H,EAAI2H,aAExB3H,EAAI2H,UAAahH,GAAWA,EAAZ+G,QAA+B,IAGjD,CAKD,GDtac,SAAU3H,EAAKC,EAAUC,EAAUC,EAAOC,GACzD,IAAIC,EAEJ,IAAKA,KAAKH,EACC,aAANG,GAA0B,QAANA,GAAiBA,KAAKJ,GAC7C0E,EAAY3E,EAAKK,EAAG,KAAMH,EAASG,GAAIF,GAIzC,IAAKE,KAAKJ,EAENG,GAAiC,mBAAfH,EAASI,IACvB,aAANA,GACM,QAANA,GACM,UAANA,GACM,YAANA,GACAH,EAASG,KAAOJ,EAASI,IAEzBsE,EAAY3E,EAAKK,EAAGJ,EAASI,GAAIH,EAASG,GAAIF,EAGhD,CC8YCqF,CAAUvF,EAAKqB,EAAUN,EAAUX,EAAOG,GAGtCI,EACHV,EAAQyB,IAAa,QAmBrB,GAjBAY,EAAIrC,EAASsB,MAAML,SACnBwC,EACC1D,EACA2D,MAAMC,QAAQtB,GAAKA,EAAI,CAACA,GACxBrC,EACAC,EACAC,EACAC,GAAsB,kBAAbgC,EACT/B,EACAC,EACAD,EACGA,EAAkB,GAClBH,EAAAwB,KAAsBgB,EAAcxC,EAAU,GACjDK,GAIwB,MAArBF,EACH,IAAKiC,EAAIjC,EAAkBY,OAAQqB,KACN,MAAxBjC,EAAkBiC,IAAY1B,EAAWP,EAAkBiC,IAM7D/B,IAEH,UAAWc,QAAA,KACViB,EAAIjB,EAASoE,SAKbnD,IAAMtC,EAAIyF,OACI,aAAbrD,IAA4BE,GAIf,WAAbF,GAAyBE,IAAMvB,EAAS0E,QAE1Cf,EAAY1E,EAAK,QAASsC,EAAGvB,EAAS0E,OAAA,GAGtC,YAAapE,QAAA,KACZiB,EAAIjB,EAASuG,UACdtF,IAAMtC,EAAI4H,SAEVlD,EAAY1E,EAAK,UAAWsC,EAAGvB,EAAS6G,SAAA,GAG1C,CAED,OAAO5H,CACP,CAQe,SAAAkE,EAASnE,EAAKE,EAAOC,GACpC,IACmB,mBAAPH,EAAmBA,EAAIE,GAC7BF,EAAIsC,QAAUpC,CAGnB,CAFC,MAAOF,GACRC,EAAA6B,IAAoB9B,EAAGG,EACvB,CACD,CAUM,SAAS+D,EAAQlE,EAAOE,EAAaC,GAArC,IACFC,EAuBMC,EAdV,GARIJ,EAAQ6H,SAAS7H,EAAQ6H,QAAQ9H,IAEhCI,EAAIJ,EAAM0B,OACTtB,EAAEkC,SAAWlC,EAAEkC,UAAYtC,EAAd8B,KACjBqC,EAAS/D,EAAG,KAAMF,IAIU,OAAzBE,EAAIJ,EAAHgC,KAA8B,CACnC,GAAI5B,EAAE2H,qBACL,IACC3H,EAAE2H,sBAGF,CAFC,MAAO/H,GACRC,EAAO6B,IAAa9B,EAAGE,EACvB,CAGFE,EAAE0C,KAAO1C,EAAAkD,IAAe,KACxBtD,EAAKgC,SAAA,CACL,CAED,GAAK5B,EAAIJ,EAAH2B,IACL,IAAStB,EAAI,EAAGA,EAAID,EAAEc,OAAQb,IACzBD,EAAEC,IACL6D,EACC9D,EAAEC,GACFH,EACAC,GAAoC,mBAAfH,EAAMuB,MAM1BpB,GAA4B,MAAdH,EAAK8B,KACvBjB,EAAWb,EAAD8B,KAKX9B,EAAA4B,GAAgB5B,EAAK8B,IAAQ9B,EAAA+B,SAAA,CAC7B,CAGD,SAAS+D,EAAS9F,EAAOC,EAAOC,GAC/B,OAAY,KAAAgC,YAAYlC,EAAOE,EAC/B,CCpiBM,SAAS8H,EAAO9H,EAAOC,EAAWC,GAAlC,IAMFC,EAOAC,EAQAC,EApBAN,EAAe2B,IAAA3B,EAAA2B,GAAc1B,EAAOC,GAYpCG,GAPAD,EAAqC,mBAAhBD,GAQtB,KACCA,GAAeA,EAAAuB,KAA0BxB,EAAAwB,IAMzCpB,EAAc,GAClBgD,EACCpD,EANDD,IAAWG,GAAeD,GAAgBD,GAAlCwB,IACPX,EAAcuB,EAAU,KAAM,CAACrC,IAS/BI,GAAYG,EACZA,OAAA,IACAN,EAAUsD,iBACTpD,GAAeD,EACb,CAACA,GACDE,EACA,KACAH,EAAU8H,WACVjI,EAAMoB,KAAKjB,EAAUoH,YACrB,KACHhH,GACCF,GAAeD,EACbA,EACAE,EACAA,EACAwB,IAAA3B,EAAU8H,WACb5H,GAIDqD,EAAWnD,EAAaL,EACxB,CAQe,SAAAgI,EAAQlI,EAAOC,GAC9B+H,EAAOhI,EAAOC,EAAWiI,EACzB,UC9DeC,EAAalI,EAAOC,EAAOC,GAC1C,IACCC,EACAC,EACAC,EAHGC,EAAkBK,EAAO,CAAC,EAAGX,EAAMuB,OAIvC,IAAKlB,KAAKJ,EACA,OAALI,EAAYF,EAAMF,EAAMI,GACd,OAALA,EAAYD,EAAMH,EAAMI,GAC5BC,EAAgBD,GAAKJ,EAAMI,GAQjC,OALIW,UAAUC,OAAS,IACtBX,EAAgBY,SACfF,UAAUC,OAAS,EAAIlB,EAAMoB,KAAKH,UAAW,GAAKd,GAG7CmB,EACNrB,EAAMsB,KACNhB,EACAH,GAAOH,EAAMwB,IACbpB,GAAOJ,EAAMyB,IACb,KAED,CN7Be,SAAA0G,EAAcpI,EAAcC,GAG3C,IAAMC,EAAU,CACf8B,IAHD/B,EAAY,OAASO,IAIpBoB,GAAe5B,EAEfqI,SAJe,SAINrI,EAAOC,GAIf,OAAOD,EAAMmB,SAASlB,EACtB,EAEDqI,SAAA,SAAStI,GAAA,IAGHE,EACAC,EAsCL,OAzCKsC,KAAKkE,kBAELzG,EAAO,IACPC,EAAM,CAAV,GACIF,GAAawC,KAEjBA,KAAKkE,gBAAkB,kBAAMxG,CAAN,EAEvBsC,KAAK8D,sBAAwB,SAAUvG,GAClCyC,KAAKjB,MAAMkE,QAAU1F,EAAO0F,OAe/BxF,EAAKmE,MAAK,SAAArE,GACTA,EAAC8B,KAAA,EACDiB,EAAc/C,EACd,GAEF,EAEDyC,KAAKsD,IAAM,SAAA/F,GACVE,EAAK8C,KAAKhD,GACV,IAAIC,EAAMD,EAAE+H,qBACZ/H,EAAE+H,qBAAuB,WACxB7H,EAAKqI,OAAOrI,EAAK0C,QAAQ5C,GAAI,GACzBC,GAAKA,EAAImB,KAAKpB,EAClB,CACD,GAGKA,EAAMmB,QACb,GASF,OAAQjB,EAAQoI,SAAuB1G,GAAA1B,EAAQmI,SAAS5C,YACvDvF,CACD,CJ9CYF,EAAQU,EAAUsE,MCfzB/E,EAAU,CACf6B,IUHM,SAAqB9B,EAAOC,EAAOC,EAAUC,GAInD,IAFA,IAAIC,EAAWC,EAAMC,EAEbL,EAAQA,EAAhB2B,IACC,IAAKxB,EAAYH,EAAH+B,OAAyB5B,EAADwB,GACrC,IAcC,IAbAvB,EAAOD,EAAU8B,cAE4B,MAAjC7B,EAAKmI,2BAChBpI,EAAUqI,SAASpI,EAAKmI,yBAAyBxI,IACjDM,EAAUF,EAAH2B,KAG2B,MAA/B3B,EAAUsI,oBACbtI,EAAUsI,kBAAkB1I,EAAOG,GAAa,CAAhD,GACAG,EAAUF,EACV2B,KAGGzB,EACH,OAAQF,EAASuF,IAAiBvF,CAInC,CAFC,MAAOH,GACRD,EAAQC,CACR,CAIH,MAAMD,CACN,GTpCGE,EAAU,EA6FDC,EAAiB,SAAAH,GAAA,OACpB,MAATA,QAAA,IAAiBA,EAAMkC,WADW,ECtEnCM,EAAUoD,UAAU6C,SAAW,SAAUzI,EAAQC,GAEhD,IAAIC,EAEHA,EADsB,MAAnBuC,KAAAyD,KAA2BzD,KAAAyD,MAAoBzD,KAAKuD,MACnDvD,KACJyD,IACIzD,KAAkByD,IAAAtF,EAAO,CAAC,EAAG6B,KAAKuD,OAGlB,mBAAVhG,IAGVA,EAASA,EAAOY,EAAO,CAAC,EAAGV,GAAIuC,KAAKjB,QAGjCxB,GACHY,EAAOV,EAAGF,GAIG,MAAVA,GAEAyC,KAAaN,MACZlC,GACHwC,KAAAwD,IAAqBjD,KAAK/C,GAE3B8C,EAAcN,MAEf,EAQDD,EAAUoD,UAAU+C,YAAc,SAAU3I,GACvCyC,KAAAN,MAIHM,KAAAX,KAAA,EACI9B,GAAUyC,KAAAR,IAAsBe,KAAKhD,GACzC+C,EAAcN,MAEf,EAYDD,EAAUoD,UAAUC,OAAStD,EAyFzBnC,EAAgB,GAadE,EACa,mBAAXsI,QACJA,QAAQhD,UAAUiD,KAAKC,KAAKF,QAAQG,WACpCC,WAuBEzI,EAAY,SAACP,EAAGC,GAAA,OAAMD,EAAAmC,IAAAN,IAAkB5B,EAA5BkC,IAAAN,GAAA,EAuBlBoB,EAAOC,IAAkB,ECxOd1C,EAAI,C,kcQCXJ,EAGAC,EAGAH,EAiBAC,E,WAdAG,EAAc,EAGdC,EAAoB,GAEpBE,EAAQ,GAERD,EAAgBR,EAAAA,QAAAA,IAChBW,EAAkBX,EAAAA,QAAAA,IAClBa,EAAeb,EAAAA,QAAAA,OACfC,EAAYD,EAAAA,QAAAA,IACZ+C,EAAmB/C,EAAAA,QAAAA,QAoGvB,SAASqC,EAAajC,EAAOF,GACxBF,EAAAA,QAAAA,KACHA,EAAAA,QAAAA,IAAcK,EAAkBD,EAAOE,GAAeJ,GAEvDI,EAAc,EAOd,IAAMH,EACLE,EAAA4I,MACC5I,EAAgB4I,IAAW,CAC3BrH,GAAO,GACPK,IAAiB,KAMnB,OAHI7B,GAASD,EAAAyB,GAAYV,QACxBf,EAAAyB,GAAYoB,KAAK,CAAEkG,IAAezI,IAE5BN,EAAKyB,GAAOxB,EACnB,CAKe,SAAAQ,EAASZ,GAExB,OADAM,EAAc,EACPI,EAAWsH,EAAgBhI,EAClC,CAQM,SAASU,EAAWV,EAASE,EAAcC,GAEjD,IAAMG,EAAY+B,EAAajC,IAAgB,GAE/C,GADAE,EAAUF,EAAWJ,GAChBM,EAAL0B,MACC1B,EAASsB,GAAU,CACjBzB,EAAiDA,EAAKD,GAA/C8H,OAAA,EAA0B9H,GAElC,SAAAF,GACC,IAAMI,EAAeE,EAAA6I,IAClB7I,EAAA6I,IAAqB,GACrB7I,EAAAsB,GAAiB,GACdvB,EAAYC,EAAUF,EAASA,EAAcJ,GAE/CI,IAAiBC,IACpBC,EAAA6I,IAAuB,CAAC9I,EAAWC,EAAAsB,GAAiB,IACpDtB,EAAA0B,IAAqByG,SAAS,CAAC,GAEhC,GAGFnI,EAAA0B,IAAuB3B,GAElBA,EAAiBH,GAAkB,KAgC9BK,EAAT,SAAyBP,EAAGI,EAAGC,GAC9B,IAAKC,EAAD0B,IAAAiH,IAA+B,OAAO,EAE1C,IAAM/I,EAAaI,EAAA0B,IAAAiH,IAAArH,GAAmCwH,QACrD,SAAApJ,GAAA,OAAKA,EADagC,GAAA,IAMnB,GAHsB9B,EAAWmJ,OAAM,SAAArJ,GAAC,OAAKA,EAALmJ,GAAA,IAIvC,OAAO1I,GAAUA,EAAQW,KAAKqB,KAAMzC,EAAGI,EAAGC,GAM3C,IAAIF,GAAA,EAUJ,OATAD,EAAWsG,SAAQ,SAAAxG,GAClB,GAAIA,EAAJmJ,IAAyB,CACxB,IAAM/I,EAAeJ,EAAQ4B,GAAQ,GACrC5B,EAAA4B,GAAkB5B,EAAlBmJ,IACAnJ,EAAQmJ,SAAA,EACJ/I,IAAiBJ,EAAA4B,GAAgB,KAAIzB,GAAA,EACzC,CACD,OAEMA,GAAgBG,EAAA0B,IAAqBR,QAAUxB,MACnDS,GACCA,EAAQW,KAAKqB,KAAMzC,EAAGI,EAAGC,GAG7B,EA9DDA,EAAiBH,GAAA,EACjB,IAAIO,EAAUJ,EAAiBkG,sBACzB/F,EAAUH,EAAiBoG,oBAKjCpG,EAAiBoG,oBAAsB,SAAUzG,EAAGI,EAAGC,GACtD,GAAIoC,KAAaX,IAAA,CAChB,IAAI5B,EAAMO,EAEVA,OAAA,EACAF,EAAgBP,EAAGI,EAAGC,GACtBI,EAAUP,CACV,CAEGM,GAASA,EAAQY,KAAKqB,KAAMzC,EAAGI,EAAGC,EACtC,EA+CDA,EAAiBkG,sBAAwBhG,CACzC,CAGF,OAAOD,EAAA6I,KAAwB7I,EAAxBsB,EACP,CAMe,SAAAN,EAAUpB,EAAUC,GAEnC,IAAMG,EAAQ+B,EAAajC,IAAgB,IACtCJ,EAAAA,QAAAA,KAAwBkF,EAAY5E,EAAD2I,IAAc9I,KACrDG,EAAKsB,GAAU1B,EACfI,EAAMH,EAAeA,EAErBE,EAAA4I,IAAAhH,IAAyCe,KAAK1C,GAE/C,CAMe,SAAAU,EAAgBd,EAAUC,GAEzC,IAAMG,EAAQ+B,EAAajC,IAAgB,IACtCJ,EAAAA,QAAAA,KAAwBkF,EAAY5E,EAAD2I,IAAc9I,KACrDG,EAAKsB,GAAU1B,EACfI,EAAMH,EAAeA,EAErBE,EAAgB4B,IAAkBe,KAAK1C,GAExC,CAEM,SAASiC,EAAOvC,GAEtB,OADAM,EAAc,EACP8H,GAAQ,iBAAO,CAAE9F,QAAStC,EAAlB,GAAmC,GAClD,CAOM,SAAS8D,EAAoB9D,EAAKI,EAAcC,GACtDC,EAAc,EACdU,GACC,WACC,MAAkB,mBAAPhB,GACVA,EAAII,KACG,kBAAMJ,EAAI,KAAV,GACGA,GACVA,EAAIsC,QAAUlC,IACA,kBAAAJ,EAAIsC,QAAU,IAArB,SAER,GACO,MAARjC,EAAeA,EAAOA,EAAKiJ,OAAOtJ,GAEnC,CAMe,SAAAoI,EAAQpI,EAASK,GAEhC,IAAMH,EAAQmC,EAAajC,IAAgB,GAC3C,OAAI8E,EAAYhF,EAAa+I,IAAA5I,IAC5BH,EAAAgJ,IAAsBlJ,IACtBE,EAAMC,EAAeE,EACrBH,EAAA+B,IAAiBjC,EACVE,EAAPgJ,KAGMhJ,EAAP0B,EACA,CAMe,SAAA+C,EAAY3E,EAAUI,GAErC,OADAE,EAAc,EACP8H,GAAQ,kBAAMpI,CAAN,GAAgBI,EAC/B,CAKM,SAAS0F,EAAW9F,GAC1B,IAAME,EAAWG,EAAiBqC,QAAQ1C,EAAzBgC,KAKX7B,EAAQkC,EAAajC,IAAgB,GAK3C,OADAD,EAAKM,EAAYT,EACZE,GAEe,MAAhBC,EAAKyB,KACRzB,EAAKyB,IAAA,EACL1B,EAAS6F,IAAI1F,IAEPH,EAASsB,MAAMkE,OANA1F,EAEtB4B,EAKA,CAMe,SAAA+B,EAAcvD,EAAOC,GAChCL,EAAAA,QAAAA,eACHA,EAAAA,QAAAA,cAAsBK,EAAYA,EAAUD,GAASA,EAEtD,CAKe,SAAAgE,EAAiBpE,GAEhC,IAAME,EAAQmC,EAAajC,IAAgB,IACrCD,EAAWS,IAQjB,OAPAV,EAAA0B,GAAe5B,EACVK,EAAiBqI,oBACrBrI,EAAiBqI,kBAAoB,SAAC1I,EAAKI,GACtCF,EAAJ0B,IAAkB1B,EAAK0B,GAAQ5B,EAAKI,GACpCD,EAAS,GAAGH,EACZ,GAEK,CACNG,EAAS,GACT,WACCA,EAAS,QAAG,EACZ,EAEF,CAEe,SAAAoJ,IACf,IAAMvJ,EAAQqC,EAAajC,IAAgB,IAC3C,IAAKJ,EAAL4B,GAAmB,CAIlB,IADA,IAAI1B,EAAOG,EAAH8B,IACQ,OAATjC,IAAkBA,EAAlBsJ,KAAiD,OAAjBtJ,EAAI0B,IAC1C1B,EAAOA,EAAA0B,GAGR,IAAIzB,EAAOD,EAAAsJ,MAAetJ,EAAAsJ,IAAa,CAAC,EAAG,IAC3CxJ,EAAA4B,GAAe,IAAMzB,EAAK,GAAK,IAAMA,EAAK,IAC1C,CAED,OAAOH,EACP4B,EAAA,CAID,SAASe,IAER,IADA,IAAIvC,EACIA,EAAYG,EAAkB8C,SACrC,GAAKjD,EAADkD,KAA0BlD,EAAA6I,IAC9B,IACC7I,EAAS6I,IAAyBhH,IAAAuE,QAAQhE,GAC1CpC,EAAA6I,IAAAhH,IAAkCuE,QAAQvD,GAC1C7C,EAAA6I,IAAAhH,IAAoC,EAIpC,CAHC,MAAO5B,GACRD,EAAA6I,IAAoChH,IAAA,GACpCjC,EAAAA,QAAAA,IAAoBK,EAAGD,EAAvB+B,IACA,CAEF,CA7YDnC,EAAAA,QAAAA,IAAgB,SAAAA,GACfK,EAAmB,KACfG,GAAeA,EAAcR,EACjC,EAEDA,EAAAA,QAAAA,IAAkB,SAAAA,GACbW,GAAiBA,EAAgBX,GAGrCI,EAAe,EAEf,IAAMD,GAHNE,EAAmBL,EAAnBgC,KAGWiH,IACP9I,IACCD,IAAsBG,GACzBF,EAAA8B,IAAwB,GACxB5B,EAAA4B,IAAoC,GACpC9B,EAAAyB,GAAY4E,SAAQ,SAAAxG,GACfA,EAAJmJ,MACCnJ,EAAA4B,GAAkB5B,EAAlBmJ,KAEDnJ,EAAAkJ,IAAyBzI,EACzBT,EAAAmJ,IAAsBnJ,EAASG,OAAA,CAC/B,MAEDA,EAAK8B,IAAiBuE,QAAQhE,GAC9BrC,EAAA8B,IAAsBuE,QAAQvD,GAC9B9C,EAAA8B,IAAwB,KAG1B/B,EAAoBG,CACpB,EAEDL,EAAAA,QAAAA,OAAiB,SAAAI,GACZS,GAAcA,EAAaT,GAE/B,IAAME,EAAIF,EAAV4B,IACI1B,GAAKA,EAAJ2I,MACA3I,EAAC2I,IAAyBhH,IAAAf,SA4YR,IA5Y2BX,EAAkByC,KAAK1C,IA4Y7CH,IAAYH,EAAAA,QAAAA,yBACvCG,EAAUH,EAAAA,QAAAA,wBACEmF,GAAgBxC,IA7Y5BrC,EAAC2I,IAAerH,GAAA4E,SAAQ,SAAAxG,GACnBA,EAASG,IACZH,EAAAiJ,IAAiBjJ,EAASG,GAEvBH,EAAAkJ,MAA2BzI,IAC9BT,EAAQ4B,GAAU5B,EAClBkJ,KACDlJ,EAASG,OAAA,EACTH,EAAAkJ,IAAyBzI,CACzB,KAEFP,EAAoBG,EAAmB,IACvC,EAEDL,EAAAA,QAAAA,IAAkB,SAACI,EAAOC,GACzBA,EAAYgE,MAAK,SAAAjE,GAChB,IACCA,EAAS6B,IAAkBuE,QAAQhE,GACnCpC,EAAA6B,IAA6B7B,EAAS6B,IAAkBmH,QAAO,SAAApJ,GAC9D,OAAAA,EAAA4B,IAAYqB,EAAajD,EADuC,GASjE,CANC,MAAOE,GACRG,EAAYgE,MAAK,SAAArE,GACZA,EAAJiC,MAAwBjC,EAACiC,IAAoB,GAC7C,IACD5B,EAAc,GACdL,EAAAA,QAAAA,IAAoBE,EAAGE,EACvB+B,IAAA,CACD,IAEGlC,GAAWA,EAAUG,EAAOC,EAChC,EAEDL,EAAAA,QAAAA,QAAkB,SAAAI,GACb2C,GAAkBA,EAAiB3C,GAEvC,IAEKC,EAFCH,EAAIE,EAAH4B,IACH9B,GAAKA,EAAT+I,MAEC/I,EAAC+I,IAAArH,GAAe4E,SAAQ,SAAAxG,GACvB,IACCwC,EAAcxC,EAGd,CAFC,MAAOA,GACRK,EAAaL,CACb,CACD,IACDE,EAAA+I,SAAA,EACI5I,GAAYL,EAAAA,QAAAA,IAAoBK,EAAYH,EAChDiC,KACD,EAwTD,IAAIU,EAA0C,mBAAzB4G,sBAYrB,SAAStE,EAAenF,GACvB,IAOII,EAPEC,EAAO,WACZqJ,aAAaxJ,GACT2C,GAAS8G,qBAAqBvJ,GAClC4I,WAAWhJ,EACX,EACKE,EAAU8I,WAAW3I,EApaR,KAuafwC,IACHzC,EAAMqJ,sBAAsBpJ,GAE7B,CAmBD,SAASmC,EAAcxC,GAGtB,IAAMI,EAAOC,EACTH,EAAUF,EAAAgC,IACQ,mBAAX9B,IACVF,EAAIgC,SAAA,EACJ9B,KAGDG,EAAmBD,CACnB,CAMD,SAAS6C,EAAajD,GAGrB,IAAMI,EAAOC,EACbL,EAAAgC,IAAgBhC,EAAA4B,KAChBvB,EAAmBD,CACnB,CAMD,SAAS8E,EAAYlF,EAASI,GAC7B,OACEJ,GACDA,EAAQkB,SAAWd,EAAQc,QAC3Bd,EAAQiE,MAAK,SAACjE,EAAKC,GAAN,OAAgBD,IAAQJ,EAAQK,EAAhC,GAEd,CAED,SAAS2H,EAAehI,EAAKI,GAC5B,MAAmB,mBAALA,EAAkBA,EAAEJ,GAAOI,CACzC,C,wBC7fD,IAAIwJ,EAAmB,EAAQ,OAI/BC,EAAOC,QAHP,SAA4BC,GAC1B,GAAInG,MAAMC,QAAQkG,GAAM,OAAOH,EAAiBG,EAClD,EACqCF,EAAOC,QAAQE,YAAa,EAAMH,EAAOC,QAAiB,QAAID,EAAOC,O,wBCJ1G,IAAIG,EAA6B,EAAQ,OAoDzCJ,EAAOC,QAnDP,SAAoCxJ,EAAG4J,GACrC,IAAIC,EAAuB,qBAAXC,QAA0B9J,EAAE8J,OAAOC,WAAa/J,EAAE,cAClE,IAAK6J,EAAI,CACP,GAAIvG,MAAMC,QAAQvD,KAAO6J,EAAKF,EAA2B3J,KAAO4J,GAAkB5J,GAAyB,kBAAbA,EAAEY,OAAqB,CAC/GiJ,IAAI7J,EAAI6J,GACZ,IAAIhK,EAAI,EACJiI,EAAI,WAAc,EACtB,MAAO,CACL1H,EAAG0H,EACHpI,EAAG,WACD,OAAIG,GAAKG,EAAEY,OAAe,CACxBoJ,MAAM,GAED,CACLA,MAAM,EACN5E,MAAOpF,EAAEH,KAEb,EACAK,EAAG,SAAW+J,GACZ,MAAMA,CACR,EACAhK,EAAG6H,EAEP,CACA,MAAM,IAAIoC,UAAU,wIACtB,CACA,IAEEC,EAFEC,GAAmB,EACrBC,GAAS,EAEX,MAAO,CACLjK,EAAG,WACDyJ,EAAKA,EAAG/I,KAAKd,EACf,EACAN,EAAG,WACD,IAAI4K,EAAOT,EAAGU,OAEd,OADAH,EAAmBE,EAAKN,KACjBM,CACT,EACApK,EAAG,SAAWsK,GACZH,GAAS,EACTF,EAAMK,CACR,EACAvK,EAAG,WACD,IACOmK,GAAoC,MAAhBP,EAAW,QAAWA,EAAW,QAC5D,CAAE,QACA,GAAIQ,EAAQ,MAAMF,CACpB,CACF,EAEJ,EAC6CZ,EAAOC,QAAQE,YAAa,EAAMH,EAAOC,QAAiB,QAAID,EAAOC,O,oBCjDlHD,EAAOC,QAHP,SAA0BiB,GACxB,GAAsB,qBAAXX,QAAmD,MAAzBW,EAAKX,OAAOC,WAA2C,MAAtBU,EAAK,cAAuB,OAAOnH,MAAMoH,KAAKD,EACtH,EACmClB,EAAOC,QAAQE,YAAa,EAAMH,EAAOC,QAAiB,QAAID,EAAOC,O,oBCAxGD,EAAOC,QAHP,WACE,MAAM,IAAIU,UAAU,uIACtB,EACqCX,EAAOC,QAAQE,YAAa,EAAMH,EAAOC,QAAiB,QAAID,EAAOC,O,sBCH1G,IAAImB,EAAoB,EAAQ,OAC5BC,EAAkB,EAAQ,OAC1BjB,EAA6B,EAAQ,OACrCkB,EAAoB,EAAQ,OAIhCtB,EAAOC,QAHP,SAA4BC,GAC1B,OAAOkB,EAAkBlB,IAAQmB,EAAgBnB,IAAQE,EAA2BF,IAAQoB,GAC9F,EACqCtB,EAAOC,QAAQE,YAAa,EAAMH,EAAOC,QAAiB,QAAID,EAAOC,O","sources":["../node_modules/preact/src/util.js","../node_modules/preact/src/options.js","../node_modules/preact/src/create-element.js","../node_modules/preact/src/component.js","../node_modules/preact/src/create-context.js","../node_modules/preact/src/constants.js","../node_modules/preact/src/diff/children.js","../node_modules/preact/src/diff/props.js","../node_modules/preact/src/diff/index.js","../node_modules/preact/src/render.js","../node_modules/preact/src/clone-element.js","../node_modules/preact/src/diff/catch-error.js","../node_modules/preact/hooks/src/index.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js"],"sourcesContent":["import { EMPTY_ARR } from './constants';\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {import('./internal').Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType =\n\t\tcontext);\n}\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getLastDom(oldParentVNode).nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {import('../internal').VNode} vnode\n */\nfunction getLastDom(vnode) {\n\tif (vnode.type == null || typeof vnode.type === 'string') {\n\t\treturn vnode._dom;\n\t}\n\n\tif (vnode._children) {\n\t\tfor (let i = vnode._children.length - 1; i >= 0; i--) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child) {\n\t\t\t\tlet lastDom = getLastDom(child);\n\t\t\t\tif (lastDom) {\n\t\t\t\t\treturn lastDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name[4] === '-')) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// In cases of bailing due to strict-equality we have to reset force as well\n\t\t\t\t\tc._force = false;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["n","l","u","i","t","r","o","f","e","c","s","a","h","v","parentNode","removeChild","y","arguments","length","children","call","defaultProps","p","type","props","key","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","vnode","d","current","_","k","this","context","b","indexOf","g","base","m","push","w","__r","debounceRendering","sort","shift","__P","L","__n","ownerSVGElement","M","x","Array","isArray","A","C","$","nextSibling","S","O","P","some","appendChild","insertBefore","I","setProperty","test","T","style","cssText","replace","toLowerCase","slice","addEventListener","z","j","removeEventListener","removeAttribute","setAttribute","event","H","contextType","value","__E","prototype","render","q","sub","state","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","N","diffed","localName","nodeType","document","createTextNode","createElementNS","createElement","is","data","childNodes","dangerouslySetInnerHTML","attributes","name","__html","innerHTML","checked","unmount","componentWillUnmount","B","firstChild","D","E","F","Consumer","Provider","splice","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","Promise","then","bind","resolve","setTimeout","__H","__V","__N","filter","every","concat","V","__m","requestAnimationFrame","clearTimeout","cancelAnimationFrame","arrayLikeToArray","module","exports","arr","__esModule","unsupportedIterableToArray","allowArrayLike","it","Symbol","iterator","done","_e","TypeError","err","normalCompletion","didErr","step","next","_e2","iter","from","arrayWithoutHoles","iterableToArray","nonIterableSpread"],"sourceRoot":""}